networks:
  kws_main:
    driver: bridge
  kws_services:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/24
          gateway: 172.25.0.1

volumes:
  #Main
  postgres_db_data_kws:
  redis_db_data_kws:
  mq_kws:

  #Services
  postgres_db_service_data:

services:
  # ------------------------------Main-------------------------------
  postgres:
    image: postgres:alpine
    container_name: postgres_db_kws
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DBNAME}
    volumes:
      - postgres_db_data_kws:/var/lib/postgresql/data:rw
    ports:
      - "127.0.0.1:${DB_PORT}:${DB_PORT}"
    networks:
      - kws_main
  
  rabbitmq:
    image: rabbitmq:4.0.7-management-alpine
    container_name: mq_q_kws
    restart: always
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_USER=${MQ_USER}
      - RABBITMQ_DEFAULT_PASS=${MQ_PASSWORD}
    ports:
      - "127.0.0.1:${MQ_SERVER_PORT}:${MQ_SERVER_PORT}"
      - "127.0.0.1:${MQ_UI_PORT}:${MQ_UI_PORT}"
    volumes:
      - mq_kws:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kws_main

  redis:
    image: redis:alpine
    container_name: redis_db_kws
    volumes:
      - redis_db_data_kws:/data:rw
    ports:
      - "127.0.0.1:${REDIS_PORT}:${REDIS_PORT}"
    env_file:
      - .env
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    restart: always
    networks:
      - kws_main

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    network_mode: "host"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:rw
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/log/nginx:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - kws_gateway

  kws_gateway:
    image: golang:latest
    container_name: kws_gateway
    privileged: true
    volumes:
      - ./nginx/conf.d:/app/nginx_conf:rw
      - ./src/:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/snap/lxd/common/lxd/unix.socket:/var/snap/lxd/common/lxd/unix.socket
      - /etc/wireguard:/etc/wireguard:ro
    network_mode: "host"
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - postgres_service
    working_dir: /app/data/cmd
    command: sh -c "apt-get update && apt-get install -y uuid-runtime && go run ."

  dnsmasq:
    image: jpillora/dnsmasq
    container_name: dnsmasq_kws
    restart: unless-stopped
    volumes:
      - ./dnsmasq.conf:/etc/dnsmasq.conf:ro
    ports:
      - "53:53/udp"
      - "53:53/tcp"
    networks:
      - kws_main

  # ------------------------------Services-------------------------------  
  postgres_service:
    image: postgres:alpine
    container_name: postgres.kws.services
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${PG_SERVICE_USERNAME}
      POSTGRES_PASSWORD: ${PG_SERVICE_PASSWORD}
      POSTGRES_DB: ${PG_SERVICE_DB}
    volumes:
      - postgres_db_service_data:/var/lib/postgresql/data:rw
    ports:
      - "127.0.0.1:${PG_SERVICE_PORT}:5432"
    networks:
      kws_services:
        ipv4_address: 172.25.0.2

  adminer:
    image: adminer
    container_name: adminer.kws.services
    restart: always
    networks:
      kws_services:
        ipv4_address: 172.25.0.4
